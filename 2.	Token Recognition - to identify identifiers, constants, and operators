#include <stdio.h>
#include <string.h>
#include <stdbool.h>
#include <ctype.h>


bool isKeyword(char *str) {
    char keywords[][10] = {"int", "float", "char", "if", "else", "while", "for"};
    int numKeywords = sizeof(keywords) / sizeof(keywords[0]);

    for (int i = 0; i < numKeywords; i++) {
        if (strcmp(str, keywords[i]) == 0) {
            return true;
        }
    }
    return false;
}


bool isOperator(char c) {
    char operators[] = "+-*/%=";
    int numOperators = strlen(operators);

    for (int i = 0; i < numOperators; i++) {
        if (c == operators[i]) {
            return true;
        }
    }
    return false;
}


void tokenize(char *input) {
    int len = strlen(input);
    int i = 0;

    while (i < len) {
        if (isalpha(input[i])) {  
            int start = i;
            while (isalnum(input[i]) || input[i] == '_') {
                i++;
            }
            int end = i - 1;
            char token[20];
            strncpy(token, input + start, end - start + 1);
            token[end - start + 1] = '\0';

            if (isKeyword(token)) {
                printf("Keyword: %s\n", token);
            } else {
                printf("Identifier: %s\n", token);
            }
        } else if (isdigit(input[i])) {  
            int start = i;
            while (isdigit(input[i]) || input[i] == '.') {
                i++;
            }
            int end = i - 1;
            char token[20];
            strncpy(token, input + start, end - start + 1);
            token[end - start + 1] = '\0';

            printf("Constant: %s\n", token);
        } else if (isOperator(input[i])) {  // Operators
            printf("Operator: %c\n", input[i]);
            i++;
        } else if (input[i] == ' ' || input[i] == '\t' || input[i] == '\n') {
            i++;
        } else {
            printf("Invalid character: %c\n", input[i]);
            i++;
        }
    }
}

int main() {
    char input[1000];
    printf("Enter input string:\n");
    fgets(input, sizeof(input), stdin);

    printf("Tokens:\n");
    tokenize(input);

    return 0;
}
